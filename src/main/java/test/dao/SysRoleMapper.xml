<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test.dao.SysRoleMapper">
	<!-- <cache
		eviction="FIFO"
		flushInterval="60000"
		size="512"
		readOnly="false"
	/> -->
	
	<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->

	<cache type="org.mybatis.caches.redis.RedisCache"/>
	
  <resultMap id="BaseResultMap" type="test.model.SysRole">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="enabled" jdbcType="INTEGER" property="enabled" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  
  <resultMap type="test.model.SysRole" id="rolePrivilegeListMapSelect"
  	extends="BaseResultMap">
  	<collection property="privilegeList"
  				fetchType="lazy"
  				column="{roleId=id}"
  				select="test.dao.SysPrivilegeMapper.selectPrivilegeByRoleId"
  	/>
  	</resultMap>
 	
 	<resultMap type="test.model.SysRole" id="rolePrivilegeListMapChoose">
 		<discriminator column="enabled" javaType="int">
 			<case value="1" resultMap="rolePrivilegeListMapSelect"/>
 			<case value="0" resultMap="BaseResultMap"/>
 		</discriminator>
 	</resultMap>
 	
 	<select id="selectRoleByUserIdChoose" resultMap="rolePrivilegeListMapChoose">
 		select r.*
 		from sys_role r
 		inner join sys_user_role ur on ur.role_id=r.id
 		where ur.user_id=#{userId}
 	</select>
 	
 	<select id="selectRoleByUserId" resultMap="rolePrivilegeListMapSelect">
 		select
 			r.id,
 			r.role_name,
 			r.enabled,
 			r.create_by,
 			r.create_time
 		from sys_role r 
 		inner join sys_user_role ur on ur.role_id = r.id
 		where ur.user_id = #{userId}
 	</select>
 	 
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="test.model.SysRole">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_role (id, role_name, enabled, 
      create_by, create_time)
    values (#{id,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{enabled,jdbcType=INTEGER}, 
      #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="test.model.SysRole">
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select id, role_name, enabled, create_by, create_time
    from sys_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, role_name, enabled, create_by, create_time
    from sys_role
  </select>
</mapper>